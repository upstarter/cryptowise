version: "3.7"
services:

  front-envoy:
    build:
      context: .
      dockerfile: Dockerfile-frontenvoy
    volumes:
      - ./front-envoy.yaml:/etc/front-envoy.yaml
      - ./certs/cryptowise-ai.pem:/etc/cryptowise-ai.pem
      - ./certs/cryptowise-ai.key:/etc/cryptowise-ai.key
    networks:
      - envoymesh
    # logging:
    #   driver: gcplogs
    expose:
      - "80"
      - "443"
      - "8001"
    ports:
      - "80:80"
      - "443:443"
      - "8001:8001"

  frontend:
    build:
      context: ./cryptowise_frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend-envoy.yaml:/etc/frontend-envoy.yaml
      # - ./cryptowise_frontend/dist:/usr/share/nginx/html
    networks:
      envoymesh:
        aliases:
          - frontend
    environment:
      - SERVICE_NAME=frontend
    # logging:
    #   driver: gcplogs
    expose:
      - "80"

  umbrella:
    build:
      context: ./platform_umbrella
      dockerfile: Dockerfile
    volumes:
      - ./umbrella-envoy.yaml:/etc/umbrella-envoy.yaml
    networks:
      envoymesh:
        aliases:
          - umbrella
    # logging:
    #   driver: gcplogs
    environment:
      - SERVICE_NAME=umbrella
    # depends_on:
    #   - cloud-sql-proxy
    expose:
      - "80"

  # cloud-sql-proxy:
  #   image: gcr.io/cloudsql-docker/gce-proxy:1.15
  #   # Port: MySQL (3306), PostgreSQL (5432)
  #   command: /cloud_sql_proxy -instances=eternal-sunset-206422:us-central1-f:master-proxy=tcp:0.0.0.0:5432
  #   volumes:
  #   # this mounts your application default credential on the container, preventing the
  #   # 'invalid json file "/config": google: read JWT from JSON credentials: 'type' field is "authorized_user" (expected "service_account")'
  #   # error if you point to the actual credential file directly
  #   - ~/.config:/root/.config
  #   ports:
  #   - 5432:5432

networks:
  envoymesh: {}

# docker run docker/compose:1.24.0 version
# echo alias docker-compose="'"'docker run --rm \
#     -v /var/run/docker.sock:/var/run/docker.sock \
#     -v "$PWD:$PWD" \
#     -w="$PWD" \
#     docker/compose:1.24.0'"'" >> ~/.bashrc
