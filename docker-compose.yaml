version: "3.7"
services:

  front-envoy:
    container_name: envoy
    image: front-envoy:v1.17.0
    build:
      context: .
      dockerfile: Dockerfile-frontenvoy
    volumes:
      - ./front-envoy.yaml:/etc/front-envoy.yaml
      - ../certs/cryptowise-ai.pem:/etc/cryptowise-ai.pem
      - ../certs/cryptowise-ai.key:/etc/cryptowise-ai.key
      - ../certs/cryptowise-cacert.pem:/etc/cryptowise-cacert.pem
      - ../certs/platform-web.ai.pem:/etc/platform-web.ai.pem
      - ../certs/platform-web.ai.key:/etc/platform-web.ai.key
    networks:
      - envoymesh
    # logging:
    #   driver: gcplogs
    expose:
      - "80"
      - "443"
      - "8001"
      - "8081"
      - "8082"
    ports:
      - "80:80"
      - "443:443"
      - "8001:8001"
      - "8081:8081"
      - "8082:8082"

  frontend:
    container_name: frontend
    image: frontend:latest
    build:
      context: ./cryptowise_frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend-envoy.yaml:/etc/frontend-envoy.yaml
    networks:
      envoymesh:
        aliases:
          - frontend
    environment:
      - SERVICE_NAME=frontend
    # logging:
    #   driver: gcplogs
    expose:
      - "80"

  api:
    container_name: api
    image: api:latest
    build:
      context: ./platform_umbrella
      dockerfile: Dockerfile
    volumes:
      - ./api-envoy.yaml:/etc/api-envoy.yaml
    networks:
      envoymesh:
        aliases:
          - api
    # logging:
    #   driver: gcplogs
    environment:
      - SERVICE_NAME=api
    # depends_on:
    #   - cloudsql-proxy
    expose:
      - "80"

  # cloud-sql-proxy:
  #   container_name: cloudsql
  #   image: gcr.io/cloudsql-docker/gce-proxy:1.15
  #   # Port: MySQL (3306), PostgreSQL (5432)
  #   command: /cloud_sql_proxy -instances=eternal-sunset-206422:us-central1:umbrella-db=tcp:0.0.0.0:5432
  #   # volumes:
  #   # # this mounts your application default credential on the container, preventing the
  #   # # 'invalid json file "/config": google: read JWT from JSON credentials: 'type' field is "authorized_user" (expected "service_account")'
  #   # # error if you point to the actual credential file directly
  #   # - ~/.config:/root/.config
  #   ports:
  #   - 5432:5432

  # cloudsql-proxy:
  #   container_name: cloudsql
  #   image: gcr.io/cloudsql-docker/gce-proxy:1.15
  #   command: /cloud_sql_proxy --dir=/tmp/cloudsql -instances=eternal-sunset-206422:us-central1:umbrella-db=tcp:0.0.0.0:5432 -credential_file=/home/certs
  #   ports:
  #     - "127.0.0.1:5432:5432"
  #   volumes:
  #     - ./certs/eternal-sunset-206422-27df1759075f.json:/home/certs
  #     - /tmp/cloudsql:/cloudsql
  #   restart: always

networks:
  envoymesh: {}
