admin:
  access_log_path: /dev/stdout
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001

static_resources:
  listeners:
  - name: listener_80
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 80
    filter_chains:
    - filters:
      - name:  envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          # codec_type: auto
          stat_prefix: ingress_http
          access_log:
          - name: envoy.access_loggers.file
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
              path: "/var/log/access_log"
          http_filters:
          - name: envoy.filters.http.router
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend
              require_tls: ALL
              domains:
              - "*.cryptowise.ai"
              routes:
              - match:
                  prefix: "/"
                redirect:
                  path_redirect: "/"
                  https_redirect: true
              cors:
                allow_origin_string_match:
                  prefix: "https://www.cryptowise.ai"
                allow_credentials: true
                # allow_headers:
                #   - "Access-Control-Allow-Origin"
          http_filters:
          - name: envoy.router
            typed_config: {}

  - name: listener_443
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 443
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          # codec_type: auto
          stat_prefix: ingress_http
          access_log:
          - name: envoy.access_loggers.file
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
              path: "/var/log/access_log"
          http_filters:
          - name: envoy.filters.http.router
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend
              domains:
              - "*.cryptowise.ai"
              routes:
              - match:
                  prefix: "/v1"
                route:
                  cluster: api
                  # retry_policy:
                  #   retry_on: connect-failure
                  #   num_retries: 5
                  # timeout: 60s
              - match:
                  prefix: "/"
                route:
                  cluster: frontend
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          # require_client_certificate: true
          common_tls_context:
            # validation_context:
            #   trusted_ca:
            #     filename: "/etc/ssl/certs/ca-certificates.crt"
            tls_certificates:
              certificate_chain:
                filename: "/etc/ssl/certs/cryptowise-ai.pem"
              private_key:
                filename: "/etc/ssl/certs/cryptowise-ai.key"

  clusters:
  - name: frontend
    connect_timeout: 10s
    type: strict_dns
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: frontend
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: frontend
                port_value: 80
  - name: api
    connect_timeout: 10s
    type: strict_dns
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: api
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: api
                port_value: 80
    # transport_socket:
    #   name: envoy.transport_sockets.tls
    #   typed_config:
    #     "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
    #     # require_client_certificate: true
    #     common_tls_context:
    #       # validation_context:
    #       #   trusted_ca:
    #       #     filename: "/etc/ssl/certs/ca-certificates.crt"
    #       tls_certificates:
    #         certificate_chain:
    #           filename: "/etc/ssl/certs/cryptowise-ai.pem"
    #         private_key:
    #           filename: "/etc/ssl/certs/cryptowise-ai.key"
# from instance:
# curl --cacert ./certs/platform-web.ai.pem https://172.28.0.4/v1/topics -vk

# then rebuild it with
# docker-compose up --build -d.

# Make a few requests to your services using curl, then log into a shell with
# docker-compose exec front-envoy /bin/bash

# An access.log file should be in /var/log, showing the results of your requests.
