admin:
  access_log_path: /dev/stdout
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001

static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 80
    filter_chains:
    - filters:
      - name:  envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          http_filters:
          - name: envoy.filters.http.router
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend
              domains:
              - "*.cryptowise.ai"
              routes:
              - match:
                  prefix: "/"
                route:
                  host_rewrite_literal: www.cryptowise.ai
                  cluster: api
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          common_tls_context:
            tls_certificates:
              certificate_chain:
                filename: "/etc/cryptowise-ai.pem"
              private_key:
                filename: "/etc/cryptowise-ai.key"


  clusters:
  - name: frontend
    connect_timeout: 10s
    type: strict_dns
    lb_policy: ROUND_ROBIN
    # http2_protocol_options: {}
    load_assignment:
      cluster_name: frontend
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: frontend
                port_value: 80
  - name: api
    connect_timeout: 10s
    type: strict_dns
    lb_policy: ROUND_ROBIN
    dns_lookup_family: V4_ONLY
    load_assignment:
      cluster_name: api
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: www.cryptowise.ai
                port_value: 443
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
# from instance:
# curl --cacert ./certs/platform-web.ai.pem https://172.28.0.4/v1/topics -vk

# then rebuild it with
# docker-compose up --build -d.

# Make a few requests to your services using curl, then log into a shell with
# docker-compose exec front-envoy /bin/bash

# An access.log file should be in /var/log, showing the results of your requests.
